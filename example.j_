eval( "(" + pm.variables.get( "Utils" ) + ")" );
eval( pm.variables.get( "Context" ) );
eval( pm.variables.get( "TestRunner" ) );

function before( cxt )
{
    console.log( "Setup :" );
    cxt.expectedCode = 200;
}

function expect_ok_200( cxt )
{
   tests[ "status is 200" ] = true;
}

function expect_bad_request_400( cxt )
{
    tests[ "Bad Request : " + cxt.jsonObject.error.message ] = 
               JSON.stringify( cxt.jsonObject ).includes( "error" );
}

function unexpected( cxt )
{
    tests[ "Status code is " + cxt.expectedCode ] = cxt.expectedCode === cxt.statusCode;
    throw new Error( JSON.stringify( cxt ) );
}

function after()
{
    console.log( "Tear Down :" );
    RequestScheduler.setNextRequest( null );
}

try
{
    let context = new Context();
    let testRunner = new TestRunner();
    
    testRunner.addResponseHandler( expect_ok_200 );
    testRunner.addResponseHandler( expect_bad_request_400 );
    testRunner.addResponseHandler( unexpected );
    testRunner.run( context );
}
catch( err )
{
    console.log( err.name );
    console.log( err.message );
   
    tests[ err ] = false;
}
